import { css, cx } from '@emotion/css';
import { DeleteTodoDocument, UpdateTodoDocument, type FetchTodoListQuery } from '@learn-graphql/api/src/gql/graphql';
import { useMutation } from '@learn-graphql/api/src/hooks/urql/useMutation';
import { useState } from 'react';

type Props = Pick<FetchTodoListQuery['todoList'][number], 'id' | 'summary' | 'finished'>;

export const ListItem = ({ id, summary, finished: finishedRaw }: Props) => {
  const [updateState, updateExec] = useMutation(UpdateTodoDocument);

  const [, deleteExec] = useMutation(DeleteTodoDocument);

  // „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„Éï„É©„Ç∞
  // API „É¨„Çπ„Éù„É≥„ÇπÂÄ§„ÇíÂàùÊúüÂÄ§„Å®„Åô„Çã„ÄÇ
  const [finished, setFinished] = useState(finishedRaw);

  // ListItem „ÅÆÂèØË¶ñ„Éª‰∏çÂèØË¶ñ„Éï„É©„Ç∞„ÄÇ
  // CSS „ÅÆ opacity ÂÄ§„ÇíÂà∂Âæ°„Åô„Çã„ÄÇ
  const [hidden, setHidden] = useState(false);

  // ListItem „ÅÆË°®Á§∫„ÉªÈùûË°®Á§∫„Éï„É©„Ç∞„ÄÇ
  // CSS „ÅÆ display ÂÄ§„ÇíÂà∂Âæ°„Åô„Çã„ÄÇ
  const [removing, setRemoving] = useState(false);

  /**
   * „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„Åå„ÇØ„É™„ÉÉ„ÇØ„Åï„Çå„Åü„ÇâÁô∫ÁÅ´„Åô„Çã„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É©„Éº„ÄÇ
   *
   * „ÉÅ„Çß„ÉÉ„ÇØ„Éï„É©„Ç∞„ÇíÊõ¥Êñ∞„Åó„Åü„ÅÆ„Å°„Å´Êõ¥Êñ∞ API „ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åß„ÄÅ„Éá„Éº„Çø„ÇÇÊõ¥Êñ∞„Åô„Çã„ÄÇ
   *
   * @remarks
   * Ë¶ñË¶ö‰∏ä„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ ON/OFF „Çí„Çµ„Éº„Éê„Éº„Åã„Çâ„ÅÆ refetch „Å†„Åë„Åß„Å™„Åè React State „Çí‰Ωø„Å£„Å¶„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÁã¨Ëá™„Åß„ÇÇË°å„Å£„Å¶„ÅÑ„Çã„ÅÆ„ÅØ„ÄÅ
   * „É¶„Éº„Ç∂„Éº„Åå„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÇíÊìç‰Ωú„Åó„ÅüÁõ¥Âæå„Å´ UI „Å´ÈÄü„ÇÑ„Åã„Å´ÂèçÊò†„Åô„Çã„Åü„ÇÅ„Åß„ÅÇ„Çã„ÄÇ
   * Âçò„Å´ ON/OFF „ÅÆÁä∂ÊÖã„ÇíÁÆ°ÁêÜ„Åô„Çã„Å†„Åë„Å™„Çâ„Çµ„Éº„Éê„Éº„Åã„Çâ„ÅÆ„É¨„Çπ„Éù„É≥„Çπ„Å†„Åë„Åß„ÇÇÂçÅÂàÜ„Å†„Åå„ÄÅÊõ¥Êñ∞ API ÂÆüË°å„Åã„Çâ refetch „ÅåÂÆå‰∫Ü„Åô„Çã„Åæ„Åß„ÅÆÊôÇÈñì„Å†„ÅëÈÅÖÂª∂„Åô„Çã„Åì„Å®„Å®„Å™„Çä„ÄÅ
   * „Åù„ÅÆÈñì„ÅØ„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅåÂè§„ÅÑÁä∂ÊÖã„ÅßÂõ∫„Åæ„Å£„Å¶„Åó„Åæ„ÅÜ„ÄÇ
   * „Åì„Çå„ÇíÂõûÈÅø„Åô„Åπ„Åè„ÄÅË¶ñË¶ö‰∏ä„Å´„Åä„Åë„Çã ON/OFF „Å®„Éá„Éº„Çø„Å´„Åä„Åë„Çã ON/OFF „ÇíÂà•„ÄÖ„Å´Âá¶ÁêÜ„Åó„Å¶„ÅÑ„Çã„ÄÇ
   */
  const handleToggleFinished = () => {
    setFinished((state) => !state);
    updateExec({
      id,
      summary,
      finished: !finished,
    });
  };

  /**
   * ListItem „Çí‰∏çÂèØË¶ñÁä∂ÊÖã„Å´„Åô„Çã„ÄÇ
   *
   * ListItem „ÅÆ `opacity` „Çí 0 „Å´„Åô„Çã„Åì„Å®„Åß„ÄÅ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Çí‰º¥„ÅÑ„Å™„Åå„Çâ‰∏çÂèØË¶ñÁä∂ÊÖã„Å´„Åô„Çã„ÄÇ
   */
  const handleDelete = () => {
    setHidden(true);
  };

  /**
   * ListItem „Åå‰∏çÂèØË¶ñÁä∂ÊÖã„Å´„Å™„Å£„Åü„ÇâÁô∫ÁÅ´„Åô„Çã„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É©„Éº„ÄÇ
   *
   * ListItem „ÅÆ `display` „Çí `none` „Å´„Åô„Çã„Åì„Å®„ÅßË¶ÅÁ¥†„Åî„Å®Ê∂à„ÅóÂéª„Çã„ÄÇ
   * „Åù„ÅÆÂæå„Å´ÂâäÈô§ API „ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åß„Éá„Éº„Çø„Åã„ÇâÊ∂àÂéª„Åô„Çã„ÄÇ
   *
   * @remarks
   * ListItem „ÅÆÂâäÈô§„Çí„Çµ„Éº„Éê„Éº„Åã„Çâ„ÅÆ refetch „Å†„Åë„Åß„Å™„Åè CSS „Çí‰Ωø„Å£„Å¶„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÁã¨Ëá™„Åß„ÇÇË°å„Å£„Å¶„ÅÑ„Çã„ÅÆ„ÅØ„ÄÅ
   * „É¶„Éº„Ç∂„Éº„ÅåÂâäÈô§„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÅüÁõ¥Âæå„Å´ UI ‰∏ä„Åã„ÇâÈÄü„ÇÑ„Åã„Å´Ê∂àÂéª„Åô„Çã„Åü„ÇÅ„Åß„ÅÇ„Çã„ÄÇ
   * Âçò„Å´ UI ‰∏ä„Åã„ÇâÊ∂àÂéª„Åô„Çã„Å†„Åë„Å™„Çâ refetch „Å†„Åë„Åß„ÇÇÂçÅÂàÜÂèØËÉΩ„Å†„Åå„ÄÅÂâäÈô§ API ÂÆüË°å„Åã„Çâ refetch „ÅåÂÆå‰∫Ü„Åô„Çã„Åæ„Åß„ÅÆÊôÇÈñì„Å†„ÅëÈÅÖÂª∂„Åô„Çã„Åì„Å®„Å®„Å®„Å™„Çä„ÄÅ
   * „Åù„ÅÆÈñì„ÅØ UI ‰∏ä„Å´ÊÆã„ÇäÁ∂ö„Åë„Å¶„Åó„Åæ„ÅÜ„ÄÇ
   * „Åì„Çå„ÇíÂõûÈÅø„Åô„Åπ„Åè„ÄÅË¶ñË¶ö‰∏ä„Å´„Åä„Åë„ÇãÂâäÈô§„Å®„Éá„Éº„Çø„Å´„Åä„Åë„ÇãÂâäÈô§„ÇíÂà•„ÄÖ„Å´Âá¶ÁêÜ„Åó„Å¶„ÅÑ„Çã„ÄÇ
   */
  const handleTransitionEnd = () => {
    setRemoving(true);
    deleteExec({
      id,
    });
  };

  return (
    <div
      className={cx(styleRoot, removing && styleRootRemoving)}
      aria-hidden={hidden}
      onTransitionEnd={handleTransitionEnd}
    >
      <label className={styleLabel}>
        <input type="checkbox" checked={finished} onChange={handleToggleFinished} disabled={updateState.fetching} />
        {finished ? <s>{summary}</s> : <span>{summary}</span>}
      </label>

      <button className={styleDeleteButton} onClick={handleDelete} title="ÂâäÈô§">
        üóëÔ∏è
      </button>

      {updateState.error ? <span className={styleErrorMessage}>{updateState.error.message}</span> : null}
    </div>
  );
};

const styleRoot = css`
  display: grid;
  grid-template-areas:
    'label   delete-button'
    'message message';
  grid-template-columns: 1fr auto;
  padding: 8px;
  opacity: 1;
  transition: opacity 0.15s;

  &[aria-hidden='true'] {
    opacity: 0;
  }
`;

const styleRootRemoving = css`
  display: none;
`;

const styleLabel = css`
  display: flex;
  grid-area: label;
  gap: 4px;
  align-items: center;
`;

const styleDeleteButton = css`
  grid-area: delete-button;
  cursor: pointer;
`;

const styleErrorMessage = css`
  grid-area: message;
  color: red;
`;
